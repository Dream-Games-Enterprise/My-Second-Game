NEXT
Particle system for food eating
Add widget
Sound for buttons, food eating and obstacle - if can find something suitable. food one will probably need to be vague just a nice sound to listen to  (make similar to collisions/bounces from Wrong Pong where slightly varied between each call of the sound) with toggle from settings/options
Add the swiping effect - it needs to overlay on the UI panel/section at the bottom of the screen.
Expand leaderboard
Clean up end of game scoreboard

Some food is not picked up (potentially when obstacles are turned off???) weird bug
try object pooling for food...?



Jess Minecraft coords for Nether
-45, 73, 82





EXTRA
HAVE SNAKE SPEED EFFECT IF ON HIGHEST 3/2 SPEEDS
HAD PARTICLE EFFECT OF SNAKE DISSIPATING WHEN GAME OVER


CORE
Leaderboard

Have a leaderboard for most points held - just count the bank balance not with sprites and stuff have them toggle to opt in to leaderboard. so need high score for 1 match then total score ever achieved...


BUG
Tail sprites all turn to current direction when they should slither and finish the direction they're going in before turning to follow the tail node/object in front if that makes sense?
Player can swipe when paused and when unpause the player changes to the direction, exploit that needs fixing


Update in Future If Played:
- Moving obstacle nodes?
- Have speed up on food pick up



Refactor Repeated Logic: The MovePlayer() and MoveTail() methods share some logic that could be abstracted into smaller helper functions for better reusability and readability.

Collision Detection:

The collision checks (isTailNode(), isObstacleNode()) are functional, but consider combining them into a single method to streamline the logic.

THIS HAS BEEN IMPLEMENTED (NEEDS TO BE CHECKED THO), Touch Input Optimization: You reset touchStartPos after each swipe. This might result in smaller consecutive swipes being misinterpreted. Consider resetting it only at TouchPhase.Ended.


Enhance Rotation Logic:

Tail segment rotation (MoveTail()) calculates direction and rotation but might produce incorrect results for segments turning around corners. Using segment-to-segment direction comparison would enhance accuracy.

Consider adding haptic feedback or sound effects for swipes and collisions to improve player engagement.

Performance Optimisation:
Instead of repeatedly using tail.Exists and foodNodes.Contains, consider a HashSet<Node> for constant-time lookups.